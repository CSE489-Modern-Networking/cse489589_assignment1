!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/jimmy/csnetwork/computer_networking/cse489589_assignment1/janvolta/src/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210905.0/
BACKLOG	janvolta_assignment1.c	/^#define BACKLOG /;"	d	file:
BUFFER_SIZE	janvolta_assignment1.c	/^#define BUFFER_SIZE /;"	d	file:
CMD_SIZE	janvolta_assignment1.c	/^#define CMD_SIZE /;"	d	file:
FALSE	janvolta_assignment1.c	/^#define FALSE /;"	d	file:
FILE_SIZE_DATA	janvolta_assignment1.c	/^#define FILE_SIZE_DATA$/;"	d	file:
LOGFILE	logger.c	/^char LOGFILE[FILEPATH_LEN];$/;"	v	typeref:typename:char[]
MSG_SIZE	janvolta_assignment1.c	/^#define MSG_SIZE /;"	d	file:
PORT	janvolta_assignment1.c	/^#define PORT /;"	d	file:
STDIN	janvolta_assignment1.c	/^#define STDIN /;"	d	file:
TRUE	janvolta_assignment1.c	/^#define TRUE /;"	d	file:
author	janvolta_assignment1.c	/^char author[250] = "AUTHOR:I, janvolta, zemingzh, jholtzma, jmchoi, have read and understood the/;"	v	typeref:typename:char[250]
client_mess	janvolta_assignment1.c	/^struct client_message client_mess; $/;"	v	typeref:struct:client_message
client_message	janvolta_assignment1.c	/^struct client_message {$/;"	s	file:
client_start	janvolta_assignment1.c	/^void client_start(char *host_ip){$/;"	f	typeref:typename:void
command	janvolta_assignment1.c	/^	char command[20];$/;"	m	struct:client_message	typeref:typename:char[20]	file:
command	janvolta_assignment1.c	/^	char command[20];$/;"	m	struct:message	typeref:typename:char[20]	file:
connect_to_host	janvolta_assignment1.c	/^int connect_to_host(char *server_ip, char *server_port) $/;"	f	typeref:typename:int
copy	janvolta_assignment1.c	/^void copy(struct ls_element *first, struct ls_element *second){$/;"	f	typeref:typename:void
cse4589_init_log	logger.c	/^void cse4589_init_log(char* port)$/;"	f	typeref:typename:void
cse4589_print_and_log	logger.c	/^void cse4589_print_and_log(const char* format, ...)$/;"	f	typeref:typename:void
data	janvolta_assignment1.c	/^	char data[256];$/;"	m	struct:client_message	typeref:typename:char[256]	file:
data	janvolta_assignment1.c	/^	char data[256];$/;"	m	struct:message	typeref:typename:char[256]	file:
fd_socket	janvolta_assignment1.c	/^	int fd_socket;$/;"	m	struct:ls_element	typeref:typename:int	file:
get_List	janvolta_assignment1.c	/^	void get_List(){$/;"	f	typeref:typename:void
ip	janvolta_assignment1.c	/^	char ip[32];$/;"	m	struct:client_message	typeref:typename:char[32]	file:
ip	janvolta_assignment1.c	/^	char ip[32];$/;"	m	struct:ls_element	typeref:typename:char[32]	file:
ip	janvolta_assignment1.c	/^	char ip[32];$/;"	m	struct:message	typeref:typename:char[32]	file:
ip_addr_server	janvolta_assignment1.c	/^#define ip_addr_server /;"	d	file:
ip_valid	janvolta_assignment1.c	/^bool ip_valid(char *ip){$/;"	f	typeref:typename:bool
is_port	janvolta_assignment1.c	/^bool is_port(char *value){$/;"	f	typeref:typename:bool
login_initial_state	janvolta_assignment1.c	/^void login_initial_state(bool is_initial){$/;"	f	typeref:typename:void
ls	janvolta_assignment1.c	/^	struct ls_element ls;$/;"	m	struct:message	typeref:struct:ls_element	file:
ls_element	janvolta_assignment1.c	/^struct ls_element {$/;"	s	file:
ls_hn	janvolta_assignment1.c	/^	char ls_hn[40];$/;"	m	struct:ls_element	typeref:typename:char[40]	file:
ls_id	janvolta_assignment1.c	/^	int ls_id;	$/;"	m	struct:ls_element	typeref:typename:int	file:
ls_init	janvolta_assignment1.c	/^struct  ls_element *ls_init(struct ls_element *next)	{$/;"	f	typeref:struct:ls_element *
ls_port	janvolta_assignment1.c	/^	int ls_port;	$/;"	m	struct:ls_element	typeref:typename:int	file:
ls_set_all	janvolta_assignment1.c	/^void ls_set_all($/;"	f	typeref:typename:void
ls_sort	janvolta_assignment1.c	/^void  ls_sort(struct ls_element *ls){$/;"	f	typeref:typename:void
main	janvolta_assignment1.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
message	janvolta_assignment1.c	/^struct message {$/;"	s	file:
next	janvolta_assignment1.c	/^	struct ls_element *next;$/;"	m	struct:ls_element	typeref:struct:ls_element *	file:
port_addr_server	janvolta_assignment1.c	/^#define port_addr_server /;"	d	file:
print_full_list	janvolta_assignment1.c	/^void print_full_list(struct ls_element *ls) {$/;"	f	typeref:typename:void
print_list	janvolta_assignment1.c	/^void print_list(struct ls_element ls){$/;"	f	typeref:typename:void
print_statistics	janvolta_assignment1.c	/^void print_statistics(struct ls_element ls){$/;"	f	typeref:typename:void
rcv_msg	janvolta_assignment1.c	/^	int rcv_msg;	$/;"	m	struct:ls_element	typeref:typename:int	file:
remove_id	janvolta_assignment1.c	/^struct ls_element *remove_id(struct ls_element *cur,int socket_id){$/;"	f	typeref:struct:ls_element *
ret_log	logger.c	/^int ret_print, ret_log;$/;"	v	typeref:typename:int
ret_print	logger.c	/^int ret_print, ret_log;$/;"	v	typeref:typename:int
server	janvolta_assignment1.c	/^int server; $/;"	v	typeref:typename:int
server_start	janvolta_assignment1.c	/^void server_start(int port){$/;"	f	typeref:typename:void
set_message	janvolta_assignment1.c	/^void set_message(char *command,char *ip,char *msg,struct message *m){$/;"	f	typeref:typename:void
snd_msg	janvolta_assignment1.c	/^	int snd_msg;	$/;"	m	struct:ls_element	typeref:typename:int	file:
split	janvolta_assignment1.c	/^int split(char delim,char *input,char *output){$/;"	f	typeref:typename:int
status	janvolta_assignment1.c	/^	char status[20];$/;"	m	struct:ls_element	typeref:typename:char[20]	file:
swap	janvolta_assignment1.c	/^void swap(struct ls_element *first, struct ls_element *second){$/;"	f	typeref:typename:void
